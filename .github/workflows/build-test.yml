name: Build / Test (with Reports)

# Run workflow on every push to the master branch
on:
    workflow_dispatch:
#   push:
#     branches: [ main, dev ]
#     paths: src/**
#   pull_request:
#     branches: [ main ]
#     paths: src/**

# permissions:
#   contents: read
#   issues: read
#   checks: write
#   pull-requests: write
#   pages: write
#   #id-token: write

env:
  SOLUTION_FILE: "Poker.sln"

jobs:
    build-test:
        # use ubuntu-latest image to run steps on
        runs-on: ubuntu-latest

        #     defaults:
        #       run:
        #         working-directory: src/Poker

        steps:
            # uses GitHub's checkout action to checkout code form the master branch
            - name: üõéÔ∏è Checkout
              uses: actions/checkout@v5

            - name: ‚öô Setup .NET 9.0
              uses: actions/setup-dotnet@v5
              with:
                  dotnet-version: "9.0.x"

            - name: ‚¨áÔ∏è Restore dependencies
              run: dotnet restore $SOLUTION_FILE
              working-directory: src/Poker

            - name: üî® Build
              run: dotnet build $SOLUTION_FILE --no-restore
              working-directory: src/Poker

            # Run Tests
            - name: üß™ Unit Testing
              run: dotnet test $SOLUTION_FILE --collect:"XPlat Code Coverage"
              working-directory: src/Poker

            - name: ‚¨Ü Publish Test Results
              uses: EnricoMi/publish-unit-test-result-action@v2
              if: always()
              with:
                  xunit_files: "src/Poker/**/TestResults/**/coverage.cobertura.xml"

            # ReportGenerator -reports:"src/**/TestResults/**/coverage.cobertura.xml" -targetdir:coveragereport
            - name: üìÉ Report Generator
              uses: danielpalme/ReportGenerator-GitHub-Action@5.4.14
              with:
                  reports: "src/Poker/**/TestResults/**/coverage.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
                  targetdir: "coveragereport" # REQUIRED # The directory where the generated report should be saved.
                  reporttypes: "HtmlInline;Cobertura" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
                  # sourcedirs: '' # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
                  # historydir: '' # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
                  # plugins: '' # Optional plugin files for custom reports or custom history storage (separated by semicolon).
                  assemblyfilters: "+Poker.API*;-XUnit.*;-Bunit.*;-AltCover.*;-AngleSharpWrappers" # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
                  classfilters: "+*;-Poker.API.Tests" # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
                  filefilters: "+*" # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
                  verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
                  # title: '' # Optional title.
                  tag: "${{ github.run_number }}_${{ github.run_id }}" # Optional tag or build version.
                  # license: '' # Optional license for PRO version. Get your license here: https://reportgenerator.io/pro
                  # customSettings: '' # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
                  toolpath: "reportgeneratortool" # Default directory for installing the dotnet tool.

            - name: ‚¨Ü Upload coverage report artifact
              uses: actions/upload-artifact@v4.3.4
              with:
                  name: CoverageReport # Artifact name
                  path: coveragereport # Directory containing files to upload

            # https://github.com/zyborg/dotnet-tests-report
            # https://github.com/marketplace/actions/dotnet-tests-report
            - name: üß™üìÉ Unit Tests - Poker API
              uses: zyborg/dotnet-tests-report@v1
              with:
                  project_path: src/Poker/Poker.API.Tests
                  report_name: Poker API Tests
                  report_title: Poker API Tests
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  gist_name: poker_api_tests.md
                  gist_badge_label: "Poker API: %Counters_passed%/%Counters_total%"
                  gist_token: ${{ secrets.GIST_TOKEN }}

            - name: üß™üìÉ Unit Tests - Poker Server WebApp
              uses: zyborg/dotnet-tests-report@v1
              with:
                  project_path: src/Poker/Poker.Server.WebApp.Tests
                  report_name: Poker Server WebApp
                  report_title: Poker Server WebApp
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  gist_name: poker_server_webapp_tests.md
                  gist_badge_label: "Poker Server WebApp: %Counters_passed%/%Counters_total%"
                  gist_token: ${{ secrets.GIST_TOKEN }}

            - name: üß™üìÉ Unit Tests - Poker API
              uses: zyborg/dotnet-tests-report@v1
              with:
                  project_path: src/Poker/Poker.WebApp.Tests
                  report_name: Poker WebApp Tests
                  report_title: Poker WebApp Tests
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  gist_name: poker_webapp_tests.md
                  gist_badge_label: "Poker WebApp: %Counters_passed%/%Counters_total%"
                  gist_token: ${{ secrets.GIST_TOKEN }}

            - name: üß™üìÉ Unit Tests - PokerHandEvaluator
              uses: zyborg/dotnet-tests-report@v1
              with:
                  project_path: src/Poker/PokerHandEvaluator.Tests
                  report_name: PokerHandEvaluator Tests
                  report_title: PokerHandEvaluator Tests
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  gist_name: pokerhandevaluator_tests.md
                  gist_badge_label: "PokerHandEvaluator: %Counters_passed%/%Counters_total%"
                  gist_token: ${{ secrets.GIST_TOKEN }}

            # - name: üß™üìÉ Unit Tests - PokerOddsPro
            #   uses: zyborg/dotnet-tests-report@v1
            #   with:
            #       project_path: src/Poker/PokerOddsPro.Tests
            #       report_name: PokerOddsPro
            #       report_title: PokerOddsPro
            #       github_token: ${{ secrets.GITHUB_TOKEN }}
            #       gist_name: pokeroddspro_tests.md
            #       gist_badge_label: "PokerOddsPro: %Counters_passed%/%Counters_total%"
            #       gist_token: ${{ secrets.GIST_TOKEN }}
